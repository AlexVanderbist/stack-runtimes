#!/bin/bash
set -e -o pipefail

wp_config() {
    test -f /www/wp-config.php && return 0

    wp config create \
        --dbhost="${WORDPRESS_DB_HOST:-mysql}" \
        --dbname="${WORDPRESS_DB_NAME:-wordpress}" \
        --dbuser="${WORDPRESS_DB_USER:-root}" \
        --dbpass="${WORDPRESS_DB_PASSWORD:-}" \
        --dbprefix="${WORDPRESS_TABLE_PREFIX:-wp_}" \
        --dbcharset="${WORDPRESS_DB_CHARSET:utf8mb4}" \
        --dbcollate="${WORDPRESS_DB_COLLATE:utf8mb4_unicode_ci}" \
        --skip-salts \
        --extra-php <<PHP
if ( file_exists( "/run/instance/wp-config.php" ) )
	require_once( "/run/instance/wp-config.php" );
if ( file_exists( "/code/.presslabs/wp-config.php" ) )
	require_once( "/code/.presslabs/wp-config.php" );
PHP
}

wp_core_args="--version=${WORDPRESS_VERSION:-latest}"

if ! [ -z "${WORDPRESS_LOCALE}" ] ; then
    # Do ourselves a favor and be locale friendly
    wp_core_args="$wp_core_args --locale=${WORDPRESS_LOCALE}"
fi

if [ -f /www/wp-includes/version.php ] ; then
    # Do not update plugins/themes if wordpress is already downloaded
    wp_core_args="$wp_core_args --skip-content"
fi

echo wp core download --force ${wp_core_args}
wp core download --force ${wp_core_args}
wp_config

for dropin in db.php object-cache.php ; do
    if [ ! -f "/code/wp-content/$dropin" ] && [ -f "/presslabs/$dropin" ]; then
        echo "Installing $dropin drop-in..." >&2
        cp "/presslabs/$dropin" "/code/wp-content/$dropin"
    else
        echo "Skip installing $dropin drop-in..." >&2
    fi
done

if $(wp core is-installed) ; then
    wp core update-db
fi
